/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CharacterIndexRouteImport } from './routes/character/index'
import { Route as CampaignIndexRouteImport } from './routes/campaign/index'
import { Route as CharacterCreateRouteImport } from './routes/character/create'
import { Route as CharacterIdRouteImport } from './routes/character/$id'
import { Route as CampaignCreateRouteImport } from './routes/campaign/create'
import { Route as CampaignIdRouteImport } from './routes/campaign/$id'
import { Route as AuthLogoutRouteImport } from './routes/auth/logout'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as HomebrewMapIndexRouteImport } from './routes/homebrew/map/index'
import { Route as HomebrewMapIdRouteImport } from './routes/homebrew/map/$id'
import { Route as CharacterIdSettingsRouteImport } from './routes/character/$id_.settings'
import { Route as CampaignJoinIdRouteImport } from './routes/campaign/join.$id'
import { Route as TabletopIdPlayerIndexRouteImport } from './routes/tabletop/$id.player/index'
import { Route as TabletopIdGmIndexRouteImport } from './routes/tabletop/$id.gm/index'
import { Route as HomebrewMapIdEditIndexRouteImport } from './routes/homebrew/map/$id_.edit/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CharacterIndexRoute = CharacterIndexRouteImport.update({
  id: '/character/',
  path: '/character/',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignIndexRoute = CampaignIndexRouteImport.update({
  id: '/campaign/',
  path: '/campaign/',
  getParentRoute: () => rootRouteImport,
} as any)
const CharacterCreateRoute = CharacterCreateRouteImport.update({
  id: '/character/create',
  path: '/character/create',
  getParentRoute: () => rootRouteImport,
} as any)
const CharacterIdRoute = CharacterIdRouteImport.update({
  id: '/character/$id',
  path: '/character/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignCreateRoute = CampaignCreateRouteImport.update({
  id: '/campaign/create',
  path: '/campaign/create',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignIdRoute = CampaignIdRouteImport.update({
  id: '/campaign/$id',
  path: '/campaign/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/auth/logout',
  path: '/auth/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const HomebrewMapIndexRoute = HomebrewMapIndexRouteImport.update({
  id: '/homebrew/map/',
  path: '/homebrew/map/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomebrewMapIdRoute = HomebrewMapIdRouteImport.update({
  id: '/homebrew/map/$id',
  path: '/homebrew/map/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CharacterIdSettingsRoute = CharacterIdSettingsRouteImport.update({
  id: '/character/$id_/settings',
  path: '/character/$id/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignJoinIdRoute = CampaignJoinIdRouteImport.update({
  id: '/campaign/join/$id',
  path: '/campaign/join/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const TabletopIdPlayerIndexRoute = TabletopIdPlayerIndexRouteImport.update({
  id: '/tabletop/$id/player/',
  path: '/tabletop/$id/player/',
  getParentRoute: () => rootRouteImport,
} as any)
const TabletopIdGmIndexRoute = TabletopIdGmIndexRouteImport.update({
  id: '/tabletop/$id/gm/',
  path: '/tabletop/$id/gm/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomebrewMapIdEditIndexRoute = HomebrewMapIdEditIndexRouteImport.update({
  id: '/homebrew/map/$id_/edit/',
  path: '/homebrew/map/$id/edit/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/campaign/$id': typeof CampaignIdRoute
  '/campaign/create': typeof CampaignCreateRoute
  '/character/$id': typeof CharacterIdRoute
  '/character/create': typeof CharacterCreateRoute
  '/campaign': typeof CampaignIndexRoute
  '/character': typeof CharacterIndexRoute
  '/campaign/join/$id': typeof CampaignJoinIdRoute
  '/character/$id/settings': typeof CharacterIdSettingsRoute
  '/homebrew/map/$id': typeof HomebrewMapIdRoute
  '/homebrew/map': typeof HomebrewMapIndexRoute
  '/tabletop/$id/gm': typeof TabletopIdGmIndexRoute
  '/tabletop/$id/player': typeof TabletopIdPlayerIndexRoute
  '/homebrew/map/$id/edit': typeof HomebrewMapIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/campaign/$id': typeof CampaignIdRoute
  '/campaign/create': typeof CampaignCreateRoute
  '/character/$id': typeof CharacterIdRoute
  '/character/create': typeof CharacterCreateRoute
  '/campaign': typeof CampaignIndexRoute
  '/character': typeof CharacterIndexRoute
  '/campaign/join/$id': typeof CampaignJoinIdRoute
  '/character/$id/settings': typeof CharacterIdSettingsRoute
  '/homebrew/map/$id': typeof HomebrewMapIdRoute
  '/homebrew/map': typeof HomebrewMapIndexRoute
  '/tabletop/$id/gm': typeof TabletopIdGmIndexRoute
  '/tabletop/$id/player': typeof TabletopIdPlayerIndexRoute
  '/homebrew/map/$id/edit': typeof HomebrewMapIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/campaign/$id': typeof CampaignIdRoute
  '/campaign/create': typeof CampaignCreateRoute
  '/character/$id': typeof CharacterIdRoute
  '/character/create': typeof CharacterCreateRoute
  '/campaign/': typeof CampaignIndexRoute
  '/character/': typeof CharacterIndexRoute
  '/campaign/join/$id': typeof CampaignJoinIdRoute
  '/character/$id_/settings': typeof CharacterIdSettingsRoute
  '/homebrew/map/$id': typeof HomebrewMapIdRoute
  '/homebrew/map/': typeof HomebrewMapIndexRoute
  '/tabletop/$id/gm/': typeof TabletopIdGmIndexRoute
  '/tabletop/$id/player/': typeof TabletopIdPlayerIndexRoute
  '/homebrew/map/$id_/edit/': typeof HomebrewMapIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/logout'
    | '/campaign/$id'
    | '/campaign/create'
    | '/character/$id'
    | '/character/create'
    | '/campaign'
    | '/character'
    | '/campaign/join/$id'
    | '/character/$id/settings'
    | '/homebrew/map/$id'
    | '/homebrew/map'
    | '/tabletop/$id/gm'
    | '/tabletop/$id/player'
    | '/homebrew/map/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/logout'
    | '/campaign/$id'
    | '/campaign/create'
    | '/character/$id'
    | '/character/create'
    | '/campaign'
    | '/character'
    | '/campaign/join/$id'
    | '/character/$id/settings'
    | '/homebrew/map/$id'
    | '/homebrew/map'
    | '/tabletop/$id/gm'
    | '/tabletop/$id/player'
    | '/homebrew/map/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/logout'
    | '/campaign/$id'
    | '/campaign/create'
    | '/character/$id'
    | '/character/create'
    | '/campaign/'
    | '/character/'
    | '/campaign/join/$id'
    | '/character/$id_/settings'
    | '/homebrew/map/$id'
    | '/homebrew/map/'
    | '/tabletop/$id/gm/'
    | '/tabletop/$id/player/'
    | '/homebrew/map/$id_/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  CampaignIdRoute: typeof CampaignIdRoute
  CampaignCreateRoute: typeof CampaignCreateRoute
  CharacterIdRoute: typeof CharacterIdRoute
  CharacterCreateRoute: typeof CharacterCreateRoute
  CampaignIndexRoute: typeof CampaignIndexRoute
  CharacterIndexRoute: typeof CharacterIndexRoute
  CampaignJoinIdRoute: typeof CampaignJoinIdRoute
  CharacterIdSettingsRoute: typeof CharacterIdSettingsRoute
  HomebrewMapIdRoute: typeof HomebrewMapIdRoute
  HomebrewMapIndexRoute: typeof HomebrewMapIndexRoute
  TabletopIdGmIndexRoute: typeof TabletopIdGmIndexRoute
  TabletopIdPlayerIndexRoute: typeof TabletopIdPlayerIndexRoute
  HomebrewMapIdEditIndexRoute: typeof HomebrewMapIdEditIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/character/': {
      id: '/character/'
      path: '/character'
      fullPath: '/character'
      preLoaderRoute: typeof CharacterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/': {
      id: '/campaign/'
      path: '/campaign'
      fullPath: '/campaign'
      preLoaderRoute: typeof CampaignIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/character/create': {
      id: '/character/create'
      path: '/character/create'
      fullPath: '/character/create'
      preLoaderRoute: typeof CharacterCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/character/$id': {
      id: '/character/$id'
      path: '/character/$id'
      fullPath: '/character/$id'
      preLoaderRoute: typeof CharacterIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/create': {
      id: '/campaign/create'
      path: '/campaign/create'
      fullPath: '/campaign/create'
      preLoaderRoute: typeof CampaignCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/$id': {
      id: '/campaign/$id'
      path: '/campaign/$id'
      fullPath: '/campaign/$id'
      preLoaderRoute: typeof CampaignIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homebrew/map/': {
      id: '/homebrew/map/'
      path: '/homebrew/map'
      fullPath: '/homebrew/map'
      preLoaderRoute: typeof HomebrewMapIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homebrew/map/$id': {
      id: '/homebrew/map/$id'
      path: '/homebrew/map/$id'
      fullPath: '/homebrew/map/$id'
      preLoaderRoute: typeof HomebrewMapIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/character/$id_/settings': {
      id: '/character/$id_/settings'
      path: '/character/$id/settings'
      fullPath: '/character/$id/settings'
      preLoaderRoute: typeof CharacterIdSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/join/$id': {
      id: '/campaign/join/$id'
      path: '/campaign/join/$id'
      fullPath: '/campaign/join/$id'
      preLoaderRoute: typeof CampaignJoinIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tabletop/$id/player/': {
      id: '/tabletop/$id/player/'
      path: '/tabletop/$id/player'
      fullPath: '/tabletop/$id/player'
      preLoaderRoute: typeof TabletopIdPlayerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tabletop/$id/gm/': {
      id: '/tabletop/$id/gm/'
      path: '/tabletop/$id/gm'
      fullPath: '/tabletop/$id/gm'
      preLoaderRoute: typeof TabletopIdGmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homebrew/map/$id_/edit/': {
      id: '/homebrew/map/$id_/edit/'
      path: '/homebrew/map/$id/edit'
      fullPath: '/homebrew/map/$id/edit'
      preLoaderRoute: typeof HomebrewMapIdEditIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  CampaignIdRoute: CampaignIdRoute,
  CampaignCreateRoute: CampaignCreateRoute,
  CharacterIdRoute: CharacterIdRoute,
  CharacterCreateRoute: CharacterCreateRoute,
  CampaignIndexRoute: CampaignIndexRoute,
  CharacterIndexRoute: CharacterIndexRoute,
  CampaignJoinIdRoute: CampaignJoinIdRoute,
  CharacterIdSettingsRoute: CharacterIdSettingsRoute,
  HomebrewMapIdRoute: HomebrewMapIdRoute,
  HomebrewMapIndexRoute: HomebrewMapIndexRoute,
  TabletopIdGmIndexRoute: TabletopIdGmIndexRoute,
  TabletopIdPlayerIndexRoute: TabletopIdPlayerIndexRoute,
  HomebrewMapIdEditIndexRoute: HomebrewMapIdEditIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
