/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HeroIndexRouteImport } from './routes/hero/index'
import { Route as CampaignIndexRouteImport } from './routes/campaign/index'
import { Route as HeroCreateRouteImport } from './routes/hero/create'
import { Route as HeroHeroIdRouteImport } from './routes/hero/$heroId'
import { Route as CampaignCreateRouteImport } from './routes/campaign/create'
import { Route as CampaignCampaignIdRouteImport } from './routes/campaign/$campaignId'
import { Route as AuthLogoutRouteImport } from './routes/auth/logout'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as HomebrewMapIndexRouteImport } from './routes/homebrew/map/index'
import { Route as HomebrewMapMapIdRouteImport } from './routes/homebrew/map/$mapId'
import { Route as HeroHeroIdSettingsRouteImport } from './routes/hero/$heroId_.settings'
import { Route as CampaignJoinInviteIdRouteImport } from './routes/campaign/join.$inviteId'
import { Route as TabletopCampaignIdPlayerIndexRouteImport } from './routes/tabletop/$campaignId.player/index'
import { Route as TabletopCampaignIdGmIndexRouteImport } from './routes/tabletop/$campaignId.gm/index'
import { Route as HomebrewMapMapIdEditIndexRouteImport } from './routes/homebrew/map/$mapId_.edit/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HeroIndexRoute = HeroIndexRouteImport.update({
  id: '/hero/',
  path: '/hero/',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignIndexRoute = CampaignIndexRouteImport.update({
  id: '/campaign/',
  path: '/campaign/',
  getParentRoute: () => rootRouteImport,
} as any)
const HeroCreateRoute = HeroCreateRouteImport.update({
  id: '/hero/create',
  path: '/hero/create',
  getParentRoute: () => rootRouteImport,
} as any)
const HeroHeroIdRoute = HeroHeroIdRouteImport.update({
  id: '/hero/$heroId',
  path: '/hero/$heroId',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignCreateRoute = CampaignCreateRouteImport.update({
  id: '/campaign/create',
  path: '/campaign/create',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignCampaignIdRoute = CampaignCampaignIdRouteImport.update({
  id: '/campaign/$campaignId',
  path: '/campaign/$campaignId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/auth/logout',
  path: '/auth/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const HomebrewMapIndexRoute = HomebrewMapIndexRouteImport.update({
  id: '/homebrew/map/',
  path: '/homebrew/map/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomebrewMapMapIdRoute = HomebrewMapMapIdRouteImport.update({
  id: '/homebrew/map/$mapId',
  path: '/homebrew/map/$mapId',
  getParentRoute: () => rootRouteImport,
} as any)
const HeroHeroIdSettingsRoute = HeroHeroIdSettingsRouteImport.update({
  id: '/hero/$heroId_/settings',
  path: '/hero/$heroId/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignJoinInviteIdRoute = CampaignJoinInviteIdRouteImport.update({
  id: '/campaign/join/$inviteId',
  path: '/campaign/join/$inviteId',
  getParentRoute: () => rootRouteImport,
} as any)
const TabletopCampaignIdPlayerIndexRoute =
  TabletopCampaignIdPlayerIndexRouteImport.update({
    id: '/tabletop/$campaignId/player/',
    path: '/tabletop/$campaignId/player/',
    getParentRoute: () => rootRouteImport,
  } as any)
const TabletopCampaignIdGmIndexRoute =
  TabletopCampaignIdGmIndexRouteImport.update({
    id: '/tabletop/$campaignId/gm/',
    path: '/tabletop/$campaignId/gm/',
    getParentRoute: () => rootRouteImport,
  } as any)
const HomebrewMapMapIdEditIndexRoute =
  HomebrewMapMapIdEditIndexRouteImport.update({
    id: '/homebrew/map/$mapId_/edit/',
    path: '/homebrew/map/$mapId/edit/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/campaign/$campaignId': typeof CampaignCampaignIdRoute
  '/campaign/create': typeof CampaignCreateRoute
  '/hero/$heroId': typeof HeroHeroIdRoute
  '/hero/create': typeof HeroCreateRoute
  '/campaign': typeof CampaignIndexRoute
  '/hero': typeof HeroIndexRoute
  '/campaign/join/$inviteId': typeof CampaignJoinInviteIdRoute
  '/hero/$heroId/settings': typeof HeroHeroIdSettingsRoute
  '/homebrew/map/$mapId': typeof HomebrewMapMapIdRoute
  '/homebrew/map': typeof HomebrewMapIndexRoute
  '/tabletop/$campaignId/gm': typeof TabletopCampaignIdGmIndexRoute
  '/tabletop/$campaignId/player': typeof TabletopCampaignIdPlayerIndexRoute
  '/homebrew/map/$mapId/edit': typeof HomebrewMapMapIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/campaign/$campaignId': typeof CampaignCampaignIdRoute
  '/campaign/create': typeof CampaignCreateRoute
  '/hero/$heroId': typeof HeroHeroIdRoute
  '/hero/create': typeof HeroCreateRoute
  '/campaign': typeof CampaignIndexRoute
  '/hero': typeof HeroIndexRoute
  '/campaign/join/$inviteId': typeof CampaignJoinInviteIdRoute
  '/hero/$heroId/settings': typeof HeroHeroIdSettingsRoute
  '/homebrew/map/$mapId': typeof HomebrewMapMapIdRoute
  '/homebrew/map': typeof HomebrewMapIndexRoute
  '/tabletop/$campaignId/gm': typeof TabletopCampaignIdGmIndexRoute
  '/tabletop/$campaignId/player': typeof TabletopCampaignIdPlayerIndexRoute
  '/homebrew/map/$mapId/edit': typeof HomebrewMapMapIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/campaign/$campaignId': typeof CampaignCampaignIdRoute
  '/campaign/create': typeof CampaignCreateRoute
  '/hero/$heroId': typeof HeroHeroIdRoute
  '/hero/create': typeof HeroCreateRoute
  '/campaign/': typeof CampaignIndexRoute
  '/hero/': typeof HeroIndexRoute
  '/campaign/join/$inviteId': typeof CampaignJoinInviteIdRoute
  '/hero/$heroId_/settings': typeof HeroHeroIdSettingsRoute
  '/homebrew/map/$mapId': typeof HomebrewMapMapIdRoute
  '/homebrew/map/': typeof HomebrewMapIndexRoute
  '/tabletop/$campaignId/gm/': typeof TabletopCampaignIdGmIndexRoute
  '/tabletop/$campaignId/player/': typeof TabletopCampaignIdPlayerIndexRoute
  '/homebrew/map/$mapId_/edit/': typeof HomebrewMapMapIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/logout'
    | '/campaign/$campaignId'
    | '/campaign/create'
    | '/hero/$heroId'
    | '/hero/create'
    | '/campaign'
    | '/hero'
    | '/campaign/join/$inviteId'
    | '/hero/$heroId/settings'
    | '/homebrew/map/$mapId'
    | '/homebrew/map'
    | '/tabletop/$campaignId/gm'
    | '/tabletop/$campaignId/player'
    | '/homebrew/map/$mapId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/logout'
    | '/campaign/$campaignId'
    | '/campaign/create'
    | '/hero/$heroId'
    | '/hero/create'
    | '/campaign'
    | '/hero'
    | '/campaign/join/$inviteId'
    | '/hero/$heroId/settings'
    | '/homebrew/map/$mapId'
    | '/homebrew/map'
    | '/tabletop/$campaignId/gm'
    | '/tabletop/$campaignId/player'
    | '/homebrew/map/$mapId/edit'
  id:
    | '__root__'
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/logout'
    | '/campaign/$campaignId'
    | '/campaign/create'
    | '/hero/$heroId'
    | '/hero/create'
    | '/campaign/'
    | '/hero/'
    | '/campaign/join/$inviteId'
    | '/hero/$heroId_/settings'
    | '/homebrew/map/$mapId'
    | '/homebrew/map/'
    | '/tabletop/$campaignId/gm/'
    | '/tabletop/$campaignId/player/'
    | '/homebrew/map/$mapId_/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  CampaignCampaignIdRoute: typeof CampaignCampaignIdRoute
  CampaignCreateRoute: typeof CampaignCreateRoute
  HeroHeroIdRoute: typeof HeroHeroIdRoute
  HeroCreateRoute: typeof HeroCreateRoute
  CampaignIndexRoute: typeof CampaignIndexRoute
  HeroIndexRoute: typeof HeroIndexRoute
  CampaignJoinInviteIdRoute: typeof CampaignJoinInviteIdRoute
  HeroHeroIdSettingsRoute: typeof HeroHeroIdSettingsRoute
  HomebrewMapMapIdRoute: typeof HomebrewMapMapIdRoute
  HomebrewMapIndexRoute: typeof HomebrewMapIndexRoute
  TabletopCampaignIdGmIndexRoute: typeof TabletopCampaignIdGmIndexRoute
  TabletopCampaignIdPlayerIndexRoute: typeof TabletopCampaignIdPlayerIndexRoute
  HomebrewMapMapIdEditIndexRoute: typeof HomebrewMapMapIdEditIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hero/': {
      id: '/hero/'
      path: '/hero'
      fullPath: '/hero'
      preLoaderRoute: typeof HeroIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/': {
      id: '/campaign/'
      path: '/campaign'
      fullPath: '/campaign'
      preLoaderRoute: typeof CampaignIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hero/create': {
      id: '/hero/create'
      path: '/hero/create'
      fullPath: '/hero/create'
      preLoaderRoute: typeof HeroCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hero/$heroId': {
      id: '/hero/$heroId'
      path: '/hero/$heroId'
      fullPath: '/hero/$heroId'
      preLoaderRoute: typeof HeroHeroIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/create': {
      id: '/campaign/create'
      path: '/campaign/create'
      fullPath: '/campaign/create'
      preLoaderRoute: typeof CampaignCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/$campaignId': {
      id: '/campaign/$campaignId'
      path: '/campaign/$campaignId'
      fullPath: '/campaign/$campaignId'
      preLoaderRoute: typeof CampaignCampaignIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homebrew/map/': {
      id: '/homebrew/map/'
      path: '/homebrew/map'
      fullPath: '/homebrew/map'
      preLoaderRoute: typeof HomebrewMapIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homebrew/map/$mapId': {
      id: '/homebrew/map/$mapId'
      path: '/homebrew/map/$mapId'
      fullPath: '/homebrew/map/$mapId'
      preLoaderRoute: typeof HomebrewMapMapIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hero/$heroId_/settings': {
      id: '/hero/$heroId_/settings'
      path: '/hero/$heroId/settings'
      fullPath: '/hero/$heroId/settings'
      preLoaderRoute: typeof HeroHeroIdSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/join/$inviteId': {
      id: '/campaign/join/$inviteId'
      path: '/campaign/join/$inviteId'
      fullPath: '/campaign/join/$inviteId'
      preLoaderRoute: typeof CampaignJoinInviteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tabletop/$campaignId/player/': {
      id: '/tabletop/$campaignId/player/'
      path: '/tabletop/$campaignId/player'
      fullPath: '/tabletop/$campaignId/player'
      preLoaderRoute: typeof TabletopCampaignIdPlayerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tabletop/$campaignId/gm/': {
      id: '/tabletop/$campaignId/gm/'
      path: '/tabletop/$campaignId/gm'
      fullPath: '/tabletop/$campaignId/gm'
      preLoaderRoute: typeof TabletopCampaignIdGmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homebrew/map/$mapId_/edit/': {
      id: '/homebrew/map/$mapId_/edit/'
      path: '/homebrew/map/$mapId/edit'
      fullPath: '/homebrew/map/$mapId/edit'
      preLoaderRoute: typeof HomebrewMapMapIdEditIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  CampaignCampaignIdRoute: CampaignCampaignIdRoute,
  CampaignCreateRoute: CampaignCreateRoute,
  HeroHeroIdRoute: HeroHeroIdRoute,
  HeroCreateRoute: HeroCreateRoute,
  CampaignIndexRoute: CampaignIndexRoute,
  HeroIndexRoute: HeroIndexRoute,
  CampaignJoinInviteIdRoute: CampaignJoinInviteIdRoute,
  HeroHeroIdSettingsRoute: HeroHeroIdSettingsRoute,
  HomebrewMapMapIdRoute: HomebrewMapMapIdRoute,
  HomebrewMapIndexRoute: HomebrewMapIndexRoute,
  TabletopCampaignIdGmIndexRoute: TabletopCampaignIdGmIndexRoute,
  TabletopCampaignIdPlayerIndexRoute: TabletopCampaignIdPlayerIndexRoute,
  HomebrewMapMapIdEditIndexRoute: HomebrewMapMapIdEditIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
